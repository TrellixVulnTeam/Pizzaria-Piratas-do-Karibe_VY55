Resolvendo o erro “fatal: refusing to merge unrelated histories” no Git
Desde o Release 2.9.0, o Git parou de permitir o merge automático de projetos que possuem históricos Git diferentes.

O erro fatal: refusing to merge unrelated histories geralmente acontece quando você tenta fazer o git pull de um repositório remoto, mas o seu repositório local possuí um histórico de commits, branches, etc, diferente do que está no repositório remoto.

Para permitir que o Git faça o merge de dois projetos com históricos diferentes, é só passar o parâmetro --allow-unrelated-histories quando for fazer o pull, assim:

git pull origin master --allow-unrelated-histories

(lembre-se de trocar os nomes do remote e branch para os que você utiliza)

https://community.umbler.com/br/t/resolvendo-o-erro-fatal-refusing-to-merge-unrelated-histories-no-git/657
============================================================================

tirando fase secreta do git, para não pedir mais no push
ssh-add ~/.ssh/id_ed25519


https://docs.github.com/pt/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#adding-your-ssh-key-to-the-ssh-agent
===========================================================================

para montar o DTO como request (adicionar)
na classe model colocar a anotação:
@Accessors(chain = true)
para poder montar o objeto na classe DTO
============================================================================
+++++++++++++++++++++++++++++ front-end +++++++++++++++++++++++++++++++++++
instalando o angular:

sudo npm i -g @angular/cli modo global
sudo npm i -g @angular/cli modo local

criar novo projeto angular:
ng new nomedoprojeto --minimal // para instalação minima

iniciar projeto angular
npm start

endereço do projeto local:
http://localhost:4200/

mudar linhas no angular.json
"inlineTemplate": false,
"inlineStyle": false,

para usar uma variável que está no componente em uma pagina HTML:
usar a dupla chaves {{ nome da variavel }}, com isso o valor da variável
é visto por todo módulo

adicional material design no angular via cli(coomand line interface)
ng add @angular/material

criar um novo componente:
ng generate component components/template/header
ou 
ng g c caminho

importar modulo para o projeto:
no arquivo app.module no início importar o mudulo desejado
módulo do menu superior
ex: import { MatToolbarModule} from '@angular/material/toolbar';
((((dica))) digitar import depois from 'caminho' que o inicio ajuda a completar


módulo do menu lateral(nav-bar)
import { MatSidenavModule } from '@angular/material/sidenav'
import { MatListModule } from '@angular/material/list'

módulo do conteudo
import { MatCardModule } from '@angular/material/card';


/////// bind de evento usar ()
/////// bind de atributo usar []

módulo para botões 
import { MatButtonModule } from '@angular/material/button';

criar uma classe para model
deve ser interface, os atributos devem ser iguais do back-end, se tiver algum campo opcional
coloca-se ? para sinalizar que esse atributo é opcional

colocar projeto no ar (netilify)
https://kheronn-machado.medium.com/angular7-netlify-hospedagem-5ba92a220295

módulos para http cliente



















